According to ISO C11, it violates a constraint to initialize a member of an aggregate that does not exist or to directly initialize anonymous members, which do not participate in initialization. In the case of initializing anonymous structs or unions, the members of such objects should be treated as members of the containing struct or union. In practice, invalid initializers can cause a compiler error, but some compilers will allow this case, possibly causing unexpected initialization behavior. To resolve this issue, only initialize members that actually exist in the aggregate or union and initialize the members of an anonymous struct or union directly, instead using a compound initializer to attempt to initialize the anonymous member itself.
