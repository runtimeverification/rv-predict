SOURCE LAYOUT

	pass/: standalone instrumentation pass derived from
	    Thread Sanitizer (tsan)
	runtime/: standalone runtime derived from tsan
	ngrt/: next-generation runtime that is simpler and faster
	    than the one derived from tsan

BUILDING

To build both the runtime and the instrumentation pass:

    mkcmake PREFIX=$HOME install

After you run mkcmake, the two binaries that you need to add RV-Predict
instrumentation to your program are under $HOME/lib,

	$HOME/lib/rvpinstrument.so
	$HOME/lib/librvprt.a

The LLVM installation on office.runtimeverification.com:2222 is screwed
up, so I recommend fetching and extracting a CLang+LLVM pre-built binary
from http://llvm.org/releases/ and running cmake with the appropriate
-DLLVM_DIR= path.  I have extracted 3.8.1 in my home directory, so I
run cmake like so:

	cmake -DLLVM_DIR=$HOME/clang+llvm-3.8.1-x86_64-linux-gnu-ubuntu-16.04/share/llvm/cmake ..


To compile your program with RV-Predict instrumentation, follow these
steps, where $BUILD refers to the $HOME/lib directory above,
$SRCS refers to your source files, $OBJS to the object files created
from those sources, and $PROG is the program you are building:

Compile each source file, $src in $SRCS:

	clang -g -Xclang -load -Xclang $BUILD/rvpinstrument.so -c $src

Link:

	clang     -o $PROG $OBJS \
	    -L$BUILD/lib -lrvprt -ldl -lrt -pthread -g

